import os
import base64


def read_file_return_base64ed_content(filename):
    data = ""
    with open(filename, 'r') as f:
        data = f.read()
    return base64.b64encode(data.encode('utf-8')).decode('utf-8')

def create_value_map(filepath:str):
    variable_file_content_map = {}
    files = os.listdir(filepath)
    for file in files:
        if file in ["create.py", "setup.ts", "assets.ts"]:
            continue
        curr_file = os.path.join(filepath, file)
        if os.path.isfile(curr_file):
            variable_file_content_map[curr_file] = read_file_return_base64ed_content(curr_file)
        if os.path.isdir(curr_file):
            if "utils" in curr_file:
                continue
            variable_file_content_map.update(create_value_map(curr_file))
    return variable_file_content_map

dirname = os.path.dirname(__file__)
output_file = open(dirname + "/assets.ts", "w")

def file_print(str):
    print(str, file=output_file)

def main():
    file_print("// This file is auto-generated by create.py")
    file_print("// Do not edit this file directly")
    file_print("// Run `python src/commands/setup/create.py` to regenerate this file")
    value_map = create_value_map(dirname)
    file_print("export let fs = {")
    for key, value in value_map.items():
        file_print(f'\t"{key}": atob("{value}"),')
    file_print("};")
    print("Generated assets.ts successfully.")


if __name__ == "__main__":
    main()
    output_file.close()