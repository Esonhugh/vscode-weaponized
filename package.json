{
  "name": "weaponized",
  "displayName": "weaponized",
  "description": "This is the vscode extension designed for esonhugh/weaponizedvscode project.",
  "version": "0.0.1",
  "publisher": "Esonhugh",
  "engines": {
    "vscode": "^1.101.0"
  },
  "license": "MIT",
  "icon": "images/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/esonhugh/vscode-weaponized.git"
  },
  "extensionKind": [
    "workspace"
  ],
  "categories": [
    "Other",
    "Snippets"
  ],
  "activationEvents": [
    "workspaceContains:**/.foam/templates/*.md",
    "workspaceContains:**/.vscode/settings.json",
    "workspaceContains:**/.vscode/.zshrc",
    "workspaceContains:**/hosts/**.md",
    "workspaceContains:**/users/**.md",
    "workspaceContains:**/services/**.md",
    "workspaceContains:**/.weaponized"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "weapon.setup",
        "title": "Setup/Create/Init weaponized vscode folder in current workspace",
        "category": "weapon management"
      },
      {
        "command": "weapon.dump_hosts",
        "title": "List/Dump all hosts",
        "category": "weapon management"
      },
      {
        "command": "weapon.dump_users",
        "title": "List/Dump all user credentials",
        "category": "weapon management"
      },
      {
        "command": "weapon.switch_host",
        "title": "Switch/Set current host",
        "category": "weapon management"
      },
      {
        "command": "weapon.switch_user",
        "title": "Switch/Set current user",
        "category": "weapon management"
      },
      {
        "command": "weapon.task.msfvenom_creation",
        "title": "Create msfvenom payload",
        "category": "weapon task"
      },
      {
        "command": "weapon.task.hashcat_cracker",
        "title": "Crack hashes with hashcat",
        "category": "weapon task"
      },
      {
        "command": "weapon.task.scan",
        "title": "Run scanner over target",
        "category": "weapon task"
      },
      {
        "command": "weapon.magic_decoder",
        "title": "Decode selected text",
        "category": "weapon feature"
      },
      {
        "command": "weaponized.terminal-logger.unregister",
        "title": "Stop/Unregister terminal logger",
        "category": "weapon recorder"
      },
      {
        "command": "weaponized.terminal-logger.register",
        "title": "Start/Register terminal logger",
        "category": "weapon recorder"
      },
      {
        "command": "foam-vscode.create-note-from-template",
        "title": "Create/New note (user/host/service) from foam template",
        "category": "weapon foam"
      },
      {
        "command": "foam-vscode.show-graph",
        "title": "Show Foam Graph",
        "category": "weapon foam"
      }
    ],
    "configuration": {
      "title": "weaponized vscode Extension Settings",
      "type": "object",
      "properties": {
        "weaponized.lhost": {
          "type": "string",
          "default": "${LHOST}",
          "description": "This is the LHOST setting for weaponized vscode extension. it's for receive reverse shell or prompt reverse links."
        },
        "weaponized.lport": {
          "type": "integer",
          "default": 6879,
          "format": "port",
          "description": "This is the LPORT setting for weaponized vscode extension. it's for receive reverse shell or prompt reverse links."
        },
        "weaponized.listenon": {
          "type": "integer",
          "default": 8890,
          "format": "port",
          "description": "This is the listen port for weaponized vscode extension. it's for listening webserver requests."
        },
        "weaponized.envs": {
          "type": "object",
          "default": {},
          "description": "This is the extra environment variables for weaponized vscode extension. it will be used in the commands and tasks. you can add your own environment variables here, like {\"MY_VAR\": \"my_value\"}. it will be used in the commands/tasks/terminals.",
          "definitions": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "weaponized.user_vars": {
          "type": "object",
          "default": {
            "kali_wordlists": "/usr/share/wordlists",
            "kali_exploits": "/usr/share/exploitdb",
            "kali_seclists": "/usr/share/seclists",
            "dns_top100000": "${config:weaponized.user_vars.kali_seclists}/Discovery/DNS/bitquark-subdomains-top100000.txt",
            "dir_raft_medium": "${config:weaponized.user_vars.kali_seclists}/Discovery/Web-Content/raft-medium-directories.txt",
            "rockyou": "${config:weaponized.user_vars.kali_wordlists}/rockyou.txt"
          },
          "description": "This is the user defined variables for weaponized vscode extension. it will be used in the commands and tasks. you can add your own variables here, like {\"MY_VAR\": \"my_value\"}. it will be used in the commands and tasks. refer this like ${config:weaponized.user_vars.MY_VAR} in the commands/tasks.",
          "definitions": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "weaponized.hashcat": {
          "type": "string",
          "default": "hashcat",
          "description": "Path to hashcat executable. it will be used in the hashcat task."
        },
        "weaponized.netcat": {
          "type": "string",
          "default": "rlwrap -I -cAr netcat -lvvp ${config:weaponized.lport}",
          "description": "This is the netcat command for weaponized vscode extension. it contains the netcat command with ${LPORT} as placeholder. u can replace with pwncat-cs or other shell handlering tools"
        },
        "weaponized.webdelivery": {
          "type": "string",
          "default": "simplehttpserver -listen 0.0.0.0:${config:weaponized.listenon} -verbose -upload",
          "description": "This is the web delivery command for weaponized vscode extension. it contains the web delivery command with ${LISTEN_ON} or ${config:weaponized.listenon} as placeholder. u can replace with other web delivery tools like python3 http.server or php -S 0.0.0.0:${LISTEN_ON}"
        },
        "weaponized.msf.venom": {
          "type": "string",
          "default": "msfvenom",
          "description": "Path to msfvenom"
        },
        "weaponized.msf.console": {
          "type": "string",
          "default": "msfconsole",
          "description": "Path to msfconsole"
        },
        "weaponized.msf.resourcefile": {
          "type": "string",
          "description": "Path to msfconsole resource file. if it doesn't exist, it will be ignored in msfconsole."
        },
        "weaponized.scanners": {
          "type": "object",
          "description": "This is the scanner configurations for weaponized vscode extension. it will be used in the scanner tasks. you can add your own scanner configurations here, like {\"nmap\": \"nmap -sS -sV -O -Pn -p- -T4 --script vuln $TARGET\"}. it will be used in the scanner tasks.",
          "definitions": {
            "additionalProperties": {
              "type": "string"
            }
          },
          "default": {
            "rustscan": "rustscan -a $TARGET -- --script=vuln -A",
            "wfuzz subdomain": "wfuzz -c -w ${config:weaponized.user_vars.dns_top100000} -u http://$TARGET -H 'Host: FUZZ.$TARGET' --hc 404",
            "ffuf subdomain": "ffuf -c -w ${config:weaponized.user_vars.dns_top100000} -u http://$TARGET -H 'Host: FUZZ.$TARGET' -fc 404",
            "wfuzz https subdomains": "wfuzz -c -w ${config:weaponized.user_vars.dns_top100000} -u https://$TARGET -H 'Host: FUZZ.$TARGET' --hc 404",
            "ffuf https subdomains": "ffuf -c -w ${config:weaponized.user_vars.dns_top100000} -u https://$TARGET -H 'Host: FUZZ.$TARGET' -fc 404",
            "nuclei": "nuclei -target $TARGET",
            "dirsearch": "dirsearch -u http://$TARGET",
            "dirsearch https": "dirsearch -u https://$TARGET",
            "feroxbuster": "feroxbuster -u http://$TARGET -w ${config:weaponized.user_vars.dir_raft_medium} -x php,html,txt -t 50",
            "feroxbuster https": "feroxbuster -u https://$TARGET -w ${config:weaponized.user_vars.dir_raft_medium} -x php,html,txt -t 50"
          }
        },
        "weaponized.terminal-log.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable terminal logging for weaponized vscode extension. it will log the terminal output to the ${config:weaponized.terminal-log.path} file."
        },
        "weaponized.terminal-log.path": {
          "type": "string",
          "default": "${workspaceFolder}/.vscode/.terminal.log",
          "description": "Path to the terminal log file for weaponized vscode extension. it will be used to log the terminal output."
        },
        "weaponized.terminal-log.level": {
          "type": "string",
          "default": "command-only",
          "description": "Terminal log level for weaponized vscode extension. it can be 'command-only', 'command-and-output'. 'command-only' will only log the command, 'command-and-output' will log the command and the its output.",
          "enum": [
            "command-only",
            "output-only",
            "command-and-output",
            "netcat-handler"
          ]
        }
      }
    },
    "terminal": {
      "profiles": [
        {
          "title": "meterpreter handler",
          "id": "weaponized.meterpreter-handler"
        },
        {
          "title": "msfconsole",
          "id": "weaponized.msfconsole"
        },
        {
          "title": "netcat handler",
          "id": "weaponized.netcat-handler"
        },
        {
          "title": "web delivery",
          "id": "weaponized.web-delivery"
        }
      ]
    },
    "snippets": [
      {
        "language": "markdown",
        "path": "src/snippets/source/blood/blood.json"
      },
      {
        "language": "markdown",
        "path": "src/snippets/source/gtfobins/gtfobins.json"
      },
      {
        "language": "markdown",
        "path": "src/snippets/source/lolbas/lolbas.json"
      },
      {
        "language": "markdown",
        "path": "src/snippets/source/weapon/weapon.json"
      }
    ]
  },
  "scripts": {
    "gen-blood": "ts-node ./src/snippets/source/blood/gen.ts",
    "vscode:prepublish": "pnpm run package",
    "vscode:publish": "vsce package --no-dependencies",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/http-string-parser": "^0.0.33",
    "@types/mocha": "^10.0.10",
    "@types/node": "~20.19.1",
    "@types/node-fetch": "^2.6.13",
    "@types/vscode": "^1.101.0",
    "@typescript-eslint/eslint-plugin": "^8.35.0",
    "@typescript-eslint/parser": "^8.35.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.5.0",
    "eslint": "^9.29.0",
    "ts-loader": "^9.5.2",
    "ts-morph": "^26.0.0",
    "typescript": "^5.8.3",
    "webpack": "^5.99.9",
    "webpack-cli": "^6.0.1"
  },
  "dependencies": {
    "fetch-to-curl": "^0.6.0",
    "http-string-parser": "^0.0.6",
    "node-fetch": "^2.7.0",
    "table": "^6.9.0",
    "vscode-variables": "^1.0.1",
    "yaml": "^2.8.0"
  }
}